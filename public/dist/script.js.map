{"version":3,"sources":["script.js"],"names":["error","quoteEl","innerHTML","authorEl","tweetBtn","style","display","document","getElementById","tweet","setAttribute","encodeURIComponent","request","XMLHttpRequest","data","url","genBtn","addEventListener","open","send","onload","status","JSON","parse","responseText","quote","author","onerror","e","character","value","click"],"mappings":"AAAA,YAgDA,SAAAA,SACAC,QAAAC,UAAA,GACAC,SAAAD,UAAA,GACAE,SAAAC,MAAAC,QAAA,OACAC,SAAAC,eAAA,SAAAN,UAAA,0DAkFA,QAAAO,SACAL,SAAAM,aAAA,OAAA,yCAAAC,mBAAAV,QAAAC,UAAA,WAAAC,SAAAD,YACAE,SAAAC,MAAAC,QAAA,GAlIA,GAAAM,SAAA,GAAAC,gBACAC,KACAC,IAAA,aACAd,QAAAM,SAAAC,eAAA,cACAL,SAAAI,SAAAC,eAAA,eACAJ,SAAAG,SAAAC,eAAA,SACAQ,OAAAT,SAAAC,eAAA,WAQAQ,QAAAC,iBAAA,QAAA,WACAL,QAAAM,KAAA,MAAAH,KAAA,GACAH,QAAAO,SAQAP,QAAAQ,OAAA,WACA,GAAAR,QAAAS,QAAA,KAAAT,QAAAS,OAAA,IAAA,CACA,GAAAP,GAAAQ,KAAAC,MAAAX,QAAAY,aAGAV,GAAAW,OAAAX,EAAAY,QAGAzB,QAAAC,UAAAY,EAAAW,MACAtB,SAAAD,UAAAY,EAAAY,OACAjB,SAJAT,UAQAY,QAAAe,QAAA,WAEA3B,SAeAO,SAAAC,eAAA,UAAAS,iBAAA,QAAA,SAAAW,GACAb,IAAA,aACAH,QAAAQ,OAAA,WACA,GAAAR,QAAAS,QAAA,KAAAT,QAAAS,OAAA,IAAA,CACA,GAAAP,GAAAQ,KAAAC,MAAAX,QAAAY,aAGAV,GAAAW,OAAAX,EAAAY,QAGAzB,QAAAC,UAAAY,EAAAW,MACAtB,SAAAD,UAAAY,EAAAY,OACAjB,SAJAT,YASAO,SAAAC,eAAA,OAAAS,iBAAA,QAAA,SAAAW,GACAb,IAAA,UACAH,QAAAQ,OAAA,WACA,GAAAR,QAAAS,QAAA,KAAAT,QAAAS,OAAA,IAAA,CACA,GAAAP,GAAAQ,KAAAC,MAAAX,QAAAY,aAGAV,GAAAW,OAAAX,EAAAe,WAGA5B,QAAAC,UAAAY,EAAAW,MACAtB,SAAAD,UAAAY,EAAAe,UACApB,SAJAT,YASAO,SAAAC,eAAA,WAAAS,iBAAA,QAAA,SAAAW,GACAb,IAAA,cACAH,QAAAQ,OAAA,WACA,GAAAR,QAAAS,QAAA,KAAAT,QAAAS,OAAA,IAAA,CACA,GAAAP,GAAAQ,KAAAC,MAAAX,QAAAY,aAGAV,GAAAW,OAAAX,EAAAY,QAGAzB,QAAAC,UAAAY,EAAAW,MACAtB,SAAAD,UAAAY,EAAAY,OACAjB,SAJAT,YASAO,SAAAC,eAAA,MAAAS,iBAAA,QAAA,SAAAW,GACAb,IAAA,SACAH,QAAAQ,OAAA,WACA,GAAAR,QAAAS,QAAA,KAAAT,QAAAS,OAAA,IAAA,CACA,GAAAP,GAAAQ,KAAAC,MAAAX,QAAAY,aAGAV,GAAAgB,OAGA7B,QAAAC,UAAAY,EAAAgB,MACA3B,SAAAD,UAAA,eACAO,SAJAT,YAuBAI,SAAAC,MAAAC,QAAA,OACAU,OAAAe","file":"script.js","sourcesContent":["'use strict'\r\n\r\n/* \r\n * create xhr object, data/url variables\r\n * get quote input, quote generator, and tweet elements\r\n */\r\nvar request = new XMLHttpRequest()\r\nvar data\r\nvar url = 'api/famous'\r\nvar quoteEl = document.getElementById(\"quoteInput\")\r\nvar authorEl = document.getElementById(\"quoteAuthor\")\r\nvar tweetBtn = document.getElementById(\"tweet\")\r\nvar genBtn = document.getElementById(\"generate\")\r\n\r\n\r\n\r\n/*\r\n * Function that opens a ajax request and sends the \r\n * request to the local server\r\n */\r\ngenBtn.addEventListener(\"click\", function sendXHR () {\r\n\trequest.open('GET', url, true)\r\n\trequest.send()\r\n})\r\n\r\n\r\n\r\n/*\r\n * Set the default onload and error xhr events to famous quotes\r\n */\r\nrequest.onload = function() {\r\n\tif (request.status >= 200 && request.status < 400) {\r\n\t\tvar data = JSON.parse(request.responseText)\r\n\r\n\t\t// if data is undefined then display error\r\n\t\tif(!data.quote || !data.author) {\r\n\t\t\terror()\r\n\t\t} else {\r\n\t\t\tquoteEl.innerHTML = data.quote\r\n\t\t\tauthorEl.innerHTML = data.author\r\n\t\t\ttweet()\r\n\t\t}\r\n\t}\r\n}\r\nrequest.onerror = function() {\r\n\t// connection error\r\n\terror()\r\n}\r\nfunction error() {\r\n\tquoteEl.innerHTML = ''\r\n\tauthorEl.innerHTML = ''\r\n\ttweetBtn.style.display = 'none'\r\n\tdocument.getElementById(\"error\").innerHTML = \"There was an error with your request. Please try again.\"\r\n}\r\n\r\n\r\n\r\n/*\r\n * Get the element of each radio button and ass a click listener\r\n * to change the xhr url and onload function to extract the quote data\r\n */\r\ndocument.getElementById(\"famous\").addEventListener(\"click\", function (e) {\r\n\turl = 'api/famous'\r\n\trequest.onload = function() {\r\n\t\tif (request.status >= 200 && request.status < 400) {\r\n\t\t\tvar data = JSON.parse(request.responseText)\r\n\r\n\t\t\t// if data is undefined then display error\r\n\t\t\tif(!data.quote || !data.author) {\r\n\t\t\t\terror()\r\n\t\t\t} else {\r\n\t\t\t\tquoteEl.innerHTML = data.quote\r\n\t\t\t\tauthorEl.innerHTML = data.author\r\n\t\t\t\ttweet()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\ndocument.getElementById(\"got\").addEventListener(\"click\", function (e) {\r\n\turl = 'api/got'\r\n\trequest.onload = function() {\r\n\t\tif (request.status >= 200 && request.status < 400) {\r\n\t\t\tvar data = JSON.parse(request.responseText)\r\n\r\n\t\t\t// if data is undefined then display error\r\n\t\t\tif(!data.quote || !data.character) {\r\n\t\t\t\terror()\r\n\t\t\t} else {\r\n\t\t\t\tquoteEl.innerHTML = data.quote\r\n\t\t\t\tauthorEl.innerHTML = data.character\r\n\t\t\t\ttweet()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\ndocument.getElementById(\"compsci\").addEventListener(\"click\", function (e) {\r\n\turl = 'api/compsci'\r\n\trequest.onload = function() {\r\n\t\tif (request.status >= 200 && request.status < 400) {\r\n\t\t\tvar data = JSON.parse(request.responseText)\r\n\r\n\t\t\t// if data is undefined then display error\r\n\t\t\tif(!data.quote || !data.author) {\r\n\t\t\t\terror()\r\n\t\t\t} else {\r\n\t\t\t\tquoteEl.innerHTML = data.quote\r\n\t\t\t\tauthorEl.innerHTML = data.author\r\n\t\t\t\ttweet()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\ndocument.getElementById(\"cn\").addEventListener(\"click\", function (e) {\r\n\turl = 'api/cn'\r\n\trequest.onload = function() {\r\n\t\tif (request.status >= 200 && request.status < 400) {\r\n\t\t\tvar data = JSON.parse(request.responseText)\r\n\r\n\t\t\t// if data is undefined then display error\r\n\t\t\tif(!data.value) {\r\n\t\t\t\terror()\r\n\t\t\t} else {\r\n\t\t\t\tquoteEl.innerHTML = data.value\r\n\t\t\t\tauthorEl.innerHTML = 'Chuck Norris'\r\n\t\t\t\ttweet()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n\r\n\r\n/*\r\n * Set tweet button link\r\n */\r\nfunction tweet() {\r\n\ttweetBtn.setAttribute(\"href\", \"https://twitter.com/intent/tweet?text=\" + encodeURIComponent(quoteEl.innerHTML + \" \\n\\n-- \" + authorEl.innerHTML))\r\n\ttweetBtn.style.display = ''\r\n}\r\n\r\n\r\n/*\r\n * set default tweetBtn display to none and load first quote\r\n */\r\ntweetBtn.style.display = 'none'\r\ngenBtn.click()"],"sourceRoot":"/source/"}